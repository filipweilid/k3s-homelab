---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rdm
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: kah-common-chart
      version: 1.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    podSecurityContext:
      supplementalGroups:
        - 100
    command:
      - sh
      - -c
      - ./Scripts/run-lldb.bash
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: ${LB_RDM}
        ports:
          http:
            port: 9000
          webhook:
            enabled: true
            port: 9001
    env:
      DB_DATABASE: rdmdb
      DB_HOST: ${LB_MYSQL}
      DB_PORT: 3306
      WEB_SERVER_ADDRESS: 0.0.0.0
      WEB_SERVER_PORT: 9000
      WEBHOOK_SERVER_ADDRESS: 0.0.0.0
      WEBHOOK_SERVER_PORT: 9001
      WEBHOOK_ENDPOINT_TIMEOUT: 30
      WEBHOOK_ENDPOINT_CONNECT_TIMEOUT: 30
      MEMORY_CACHE_CLEAR_INTERVAL: 900
      MEMORY_CACHE_KEEP_TIME: 3600
      RAW_THREAD_LIMIT: 100
      LOG_LEVEL: debug #debug, info, warning
      NO_CELL_POKEMON: 1
    envFrom:
      - secretRef:
          name: rdm-secrets
    controller:
      replicas: 1
      strategy: RollingUpdate
    image:
      repository: ghcr.io/realdevicemap/realdevicemap/realdevicemap
      tag: c27b9f6bde983e3485d55346774b7d3256d344a9
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          nginx.ingress.kubernetes.io/auth-url: https://auth.${SECRET_DOMAIN}/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
    persistence:
      images:
        enabled: true
        type: nfs
        server: "192.168.0.12"
        path: /mnt/hdd/k3s/nfs/rdm-images
        mountPath: /app/resources/webroot/static/img
        readonly: false
      backup:
        enabled: true
        type: nfs
        server: "192.168.0.12"
        path: /mnt/hdd/k3s/nfs/rdm-backups
        mountPath: /app/backups
        readonly: false
